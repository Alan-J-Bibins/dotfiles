z Proj
z --version
z zsh
cd plugins
echo $0
git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/plugins/zsh-autosuggestions
cd zsh-autosuggestions
pacman
ls .zsh/plugins
git clone https://github.com/zdharma-continuum/fast-syntax-highlighting ~/.zsh/plugins
git clone https://github.com/zdharma-continuum/fast-syntax-highlighting ~/.zsh/plugins/fsh
git clone https://github.com/zsh-users/zsh-completions ~/.zsh/plugins/
git clone https://github.com/zsh-users/zsh-completions ~/.zsh/plugins/zsh-completions
curl -s https://ohmyposh.dev/install.sh | bash -s
cd .misc
l;s
du -shc *
curl -s https://ohmyposh.dev/install.sh | bash -s -- -d ~/.misc/ohmyposh
ls ohmyposh
cd oh-my-posh
oh-my-posh -c
Get-PoshThemes
rm -rf ohmyposh
yay -Ss oh-my-posh
yay -S oh-my-posh
oh-my-posh
pacman -S gnome-tweaks
yay h
yay --help
yay -U oh-my-posh
z misc
ls .conifg
ls .confuig
ls .config/yay
z home
z /
fd themes
fd oh-my-posh
cd var/lib/pacman/local/oh-my-posh-21.2.1-1
cd files
cd descs
mkdir ohmyposh
cd ohmyposh
mkdir themes
cd themes
curl -L -O https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/amro.omp.json
pacman -S opentoonz
yay -Sy snapd
snap
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install ao
aa-enabled
nvim test.c
zl
mkdir random
cd random
cd .
mv random ACM
cd ExamCooker
cd .local
cd share
cd nvim/site
cd nvim
cd site
cd .local/share/nvim
cd lazy
cd peek.nvim
deno task build:debug
git config --global user.name "Alan-J-Bibins"
git config --global user.email "alanjbibins@gmail.com"
git config credential.helper store
git config
git config -l
git config --global
git config --global -l
git config --global credential.helper store
gl
cd webbb
git init
git rm
rm -rf webbb
/bin/bash -c "$(curl --proto '=https' --tlsv1.2 -sSf https://setup.atuin.sh)"
echo 'eval "$(atuin init zsh)"' >> ~/.zshrc
atuin register
z kitty
nvim k
z kitt
nvim somethng
cd downloads
dl
ld
rm getnf
rm -rf getnf
rm -rf NVIDIA-Linux-x86_64-550.90.07.run
ealr
npx create-next-app@latest
pacman -Sy tree
mkdir testingReact
z T
z testingReact
npx create-react-app myapp
su
z myapp
cd myapp
npm start
z testin
gls
mkdir counterAp
npm install -g pnpm
pnpm setup
cklear
echo $PNPM_HOME
cd counterAp
pacman -Qi chrome
mkdir basicCalculator
lcear
mkdir css
touch index.html css/styles.css index.js
ls css
nvim index.
mkdir theodinproject
cd theodinproject
mkdir odin-recipes
z odin-recipes
touch index.html
mkdir recipes
touch recipes/lasagna.html
z webb
vnim
nvim css/styles.css
z ACM
sudo snap install figma-linux
snap warnings
systemctl enable --now snapd.apparmor
yay -S opentabletdriver
git clone https://aur.archlinux.org/opentabletdriver.git
cd opentabletdriver && makepkg -si
rm -rf opentabletdriver
sudo rmmod wacom hid_uclogic
nvim meet_8_june.md
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
cargo
z .misc
cargo install --git https://github.com/outfoxxed/glorious-mouse-control
rm -d glorious-mouse-control
rustup -update
rustup update
pacman -S i3
sudo nvim /usr/share/xsessions/i3.desktop
awk -F= '/^Name=/ {print $2}'  /usr/share/xsessions/*.desktop
gdm --version
pacman -Ss gdm
pacman -S gdm
sudo service gdm restart
systemctl restart gdm.service
yay -S gdm-settings
cat /etc/gdm/Xsession
ls /etc/gdm
cat /etc/gdm
cd /etc/gdm
vim custom.conf
sudo vim i3.desktop
systemctl restart gdm
dpkg
dpkg-reconfigure 
pacman -Q
pacman -S xorg-utils xorg-server
pacman -S xorg-server
dmenu
fd i3
fd -a i3
pacman -Ss dmenu
sudo pacman -S dmenu
xinput
pacman -Qi xinput
xset
xorg-xset 
cla
libinput list-devices
sudo libinput list-devices
libinput
yay -S picom
clerar
ls /etc/xdg/picom
ls /etc/xdg/
nvim /etc/xdg/picom.conf
z .config/
mkdir picom
z picom
nvim picom.conf
nvim .config/i3/config
nvim .weztermlua
clewr
nvim .wezterm.lua
cp wallhaven-8586my_1920x1080.png wallhaven-l8vp7y_1920x1080.png wallhaven-zy6y1j_1920x1080.png ../AJB/Projects
pacman -Sl multilib | less
sudo nvim /etc/pacman.conf
cat /etc/pacman.conf
pacman -Sl multilib
pacman -Sl multilib | grep "steam"
pacman -Sl multilib | grep "wine"
ls AJB
cd AJB
cd testing
rm -rf testingReact
df -Th
sudo pacman -S timeshift
mkdir .p
sudo pacman -Ss linux-lts-headers
$ lspci -k | grep -A 2 -E "(VGA|3D)"
lspci -k | grep -A 2 -E "(VGA|3D)"~
lspci
glorious-mouse-control --debounce-time 4
glorious-mouse-control --debounce-time 4ms
sudo glorious-mouse-control --debounce-time 4ms
sudo glorious-mouse-control --dpi 2
sudo glorious-mouse-control --dpi 800\ 
sudo glorious-mouse-control --dpi 800
glorious-mouse-control --config ~/.misc/
z .mis
mkdir glorious-mouse-control
cd glorious-mouse-control
nvim file.txt
glorious-mouse-control --config ~/.misc/glorious-mouse-control/file.txt
z glorious-mouse-control
glorious-mouse-control --help
glorious-mouse-control
nvim config.json
sudo glorious-mouse-control
pacman -Qiv linux-lts-headers
yay -S nvidia nvidia-utils lib32-nvidia-utils
sudo nvim /etc/default/grub
yay -Ss nvidia
yay -Ss nvidia-lts
yay -S nvidia-lts
pacman -Ss wget
vim nvidia.hook
ls -a /etc/pacman.d
mkdir /etc/pacman.d/hooks
sudo mkdir /etc/pacman.d/hooks
ls /etc/pacman.d
pacman -V
pacman -Qi vim
ls v/ar/lib/pacman
ls /var/lib/pacman/db.lck
rm /var/lib/pacman/db.lck
sudo rm /var/lib/pacman/db.lck
ls /var/lib/pacman/
pacman -H
pacman --help
pacman -R hyprcursor-0.1.9-1  hyprlang-0.5.2-1  libliftoff-0.5.0-1  libzip-1.10.1-1  seatd-0.8.0-1  tomlplusplus-3.4.0-1  hyprland-0.40.0-1
sudo pacman -R hyprcursor-0.1.9-1  hyprlang-0.5.2-1  libliftoff-0.5.0-1  libzip-1.10.1-1  seatd-0.8.0-1  tomlplusplus-3.4.0-1  hyprland-0.40.0-1
sudo pacman -R hyprland
sudo pacman -S tomlplusplus
sudo pacman -R tomlplusplus
sudo pacman -R seatd
sudo pacman -R hyprland hyprcursor
sudo pacman -R hyprlang hyprcursor
sudo pacman -R libliftoff libzip
pacman -h
pacman -Scc
pacman -Qkk
sudo pacman -Scc
pacman -S hyprland
hyprland
lsof
sudo yay -Syu
getnf
sudo pacman -S base-devel linux-headers git nano --needed
sudo pacman -S base-devel linux-lts-headers git nano --needed
sudo vim /etc/pacman.d/mirrorlist
sudo vim /etc/pacman.conf
yay -S nvidia-lts nvidia-utils lib32-nvidia-utils
pacman -Qi nvidia
yay -S nvidia-settings
sudo vim /etc/default/grub
sudo grub-mkconfig -o /boot/grub/grub.cfg
sudo vim /etc/mkinitcpio.conf
pacman -Qi nvidia-lts
uname -r
sudo pacman -S nvidia-lts
sudo mkinitcpio -P linux-lts
sudo pacman -S nvidia
sudo mkinitcpio -P
sudo pacman -S wget
cd ~
clare
cat /etc/default/grub
sudo pacman -Qi linux-lts-headers
cat /etc/mkinitcpio.conf
wget https://raw.githubusercontent.com/korvahannu/arch-nvidia-drivers-installation-guide/main/nvidia.hook
nvim nvidia.hook
cd /etc/pacman.d/
mkdir hooks
sudo mkdir hooks
cd
sudo mv ./nvidia.hook /etc/pacman.d/hooks/
sl /etc/pacman.d/hooks
ls /etc/pacman.d/hooks
lsmod | grep nvidia
glxinfo
lsmod
lsmod | grep intel
pacman -Ss torbrowser-launcher
pacman -S torbrowser-launcher
sudo pacman -S torbrowser-launcher
pacman -Ss libratbadg
pacman -Ss libratbagd
pacman -Ss libratbag
sudo pacman -S libratbag
pacman -Qi libratbag
sudo pacman -S piper
pacman -Qi piper
sudo pacman -
fd hypr
cd .config
\

pacman -Ss wofi
sudo pacman -S wofi
z .config/hypr
nvim env_var_nvidia.conf
hyprctl monitors all
localectl
pacman -Qi waybar
pacman -Ss waybar
sudo pacman -S waybar
pacman -Ss xdg-desktop-portal-hyprland
pacman -Qi xdg-desktop-portal-hyprland
sudo pacman -S xdg-desktop-portal-hyprland
echo $QT_QPA_PLATFORMTHEME
dbus-update-activation-environment --help
dbus-update-activation-environment --verbose
google-chrome-stable --help
google-chrome-stable
ls /etc/gdm/
sudo vim /etc/gdm/custom.conf
yay -S brave-bin
cd $XDG_CONFIG_HOME/waybar/
cd $XDG_CONFIG_HOME/
cd $XDG_CONFIG_HOME
ls .waybar
ls -a
fd waybar
fd nvim
fd -H waybar
fd -H nvim
ls etc/xdg/waybar/
sudo ls etc/xdg/waybar/
sudo ls /etc/xdg/waybar/
mkdir .config/waybar
z .config/waybar
yay -Ss wlogout
pacman -Ss wlogout
sudo yay -S wlogout
yay -S wlogout
cd /usr/share/xsessions
z xs
yay -Qi wayfire
pacman -Qi wayfire
pacman -Qi sway
yay -S greetd
systemctl
systemctl --help
sudo ls /etc/greetd/config.toml
sudo cat /etc/greetd/config.toml
disable gdm
disable --help
disable -h
sudo vim /etc/greetd/config.toml
cd /etc/greetd/config.toml
cd /etc/greetd/
vim hyprland.conf
sudo vim hyprland.conf
cat config.toml
sudo vim config.toml
systemctl get-default
systemctl start greetd.service
sudo mv hyprland.desktop /usr/share/xsessions
sudo vim hyprland.desktop
ls /usr/bin | grep hypr
which Hyprland
ls /usr/bin | grep -i hypr
pacman -Qi polkit
pacman -Qi polkit-gnome
pacman -Ss polkit-gnome
yay -Ss polkit
yay -S polkit-gnome
loginctl show-session $XDG_SESSION_ID
sudo pacman -S lemurs
systemctl set-default multi-user.target
lemurs
Hyprland
sudo pacman -S ly
pacman -Qi ly
sudo systemctl disable gdm.service
sudo systemctl start ly.service
ly
Ly
reboot]
systemctl set-default graphical.target
sudo systemctl enable ly.service
logout
claewr
yay -Qi brave
yay -R brave-bin
sudo snap install brave
snap -h
snap help --all
sudo snap remove brave
yay -Ss brave
yay -S brave-nightly-bin
brave
brave-nightly
systemctl status bluetooth
sudo systemctl start bluetooth
systemctl enable bluetoothh
systemctl enable bluetooth
gnome-keyring
gnome-keyring import
sudo ls /usr/lib/polkit-gnome
waybar -v
z waybar | ls
nvim config.jsonc 
killall -SIGUSR2 waybar
xclip
yay -Ss mpd
yay -S mpd
lsmod | grep snd
lsmod | grep pulse
lsmod | grep pipe
lsmod | grep pipewire
lsmod | grep pulseaudio
pactl info
yay -Ss waybar-tray
yay -Sstray
yay -Ss tray
yay -Qi vim
yay -Qi tray
yay -Qi waybar-tray
yay -Ss fastfetch
yay -R neofetch
yay -S fastfetch
mpd
kitten
kitten themes
cl4aer
nvim theme.css
nvim style.css ]
nvim hypr
hyprctl devices
nvim ls
wofi-bluetooth
wofi --show
yay -Ss rofi
yay -S rofi
rofi
rm theme.css
mkdir scripts
kls
git clone https://github.com/ashish-kus/waybar-minimal
z waybar-minimal
z src
cp scripts
cp scripts ~/.config/waybar/
cp -r scripts ~/.config/waybar/
ls scripts
nvim config.jsonc style.css
rm -rf waybar
exuit
yay -Ss blender
yay -S blender
yay -S bibata-modern-classic
hypridle
ls ~/.themes
rm -d .icons
z .local
z share
ls icons
yay -Ss bibata-cursor-theme-bin
tar -xvf Bibata.tar.gz
yay -S bibata-cursor-theme-bin
yay -Qi bibata-cursor-theme-bin
sudo ls /usr/bin
yay -R bibata-cursor-theme-bin
tar -xvf Bibata-Modern-Classic.tar.xz
mv Bibata-Modern-Classic ~/.local/share/icons/
hyprctl setcursor Bibata-Modern-Classic
yay -Qi google-chrome-stable
pacman -Qi google-chrome
sudo pacman -R google-chrome
z basicCalculator
nvim index.js index.html
edit
pacman -Ss atlauncher
pacman -S atlaunch
pacman -Ss atlaunch
yay -Ss atlauncher
yay -R atlauncher
shutdown
shutdown -c
shutdown -h now
hyprctl setcursor Bibata-Modern-Classic 24
hyprctl -h
hyprctl notify hello
hyprctl notify hello there
hyprpaper 
s alacritty
yay -S alacritty
swww img ~/Downloads/wallhaven-8586my_1920x1080.png
swww img ~/Downloads/wallhaven-l8vp7y_1920x1080.png
swww img ~/Downloads/wallhaven-zy6y1j_1920x1080.png
s swww
yay -S swww
swww --version
swww --help
clea
hyprctl setcursor Bibata
hyprctl setcursor Bibata 24
mkdir confs
z confs
Cls
nvim envs.conf
nvim autostarts.conf
nvim looks.conf
nvim input.conf
nvim binds.conf
ls .config/
mkdir .config/alacritty
nvim .config/alacritty/alacritty.toml
nvim hyprland.conf 
z hyprland.conf
ls Pictures
z Pictres
mkdir Wallpapers
swww --h
brightnessctl
s brightnessctl
yay -S brightnessctl
brightnessctl set 10%+
z hyprt
mkdir -p ~/.config/rofi
ls .config
rofi -dump-config > ~/.config/rofi/config.rasi
nvim .config/rofi/config.rasi
s pywal-16-colors
yay -R pywal-16-colors
yay -S python-pywal
swww img ~/Downloads/wallhaven-zy6y1j_1920x1080.png && wal -i ~/Downloads/wallhaven-zy6y1j_1920x1080.png
ls current-theme.conf
cat current-theme.conf
mkdir wofi
slc
earl
mkdir waybar
git clone https://github.com/dracula/wofi.git\

sls
./screenshot.png
open screenshot.png
pic screenshot.png
nautilus
nautilus -w
nautilus -s
nautilus -s screenshot.png
ls]
cat style.css
cp /etc/xdg/waybar/* ~/.config/waybar/
wofi
wofi --help
wofi --conf style.css
wofi --show drun --conf style.css
flatpak
bluez
bluetoothd -V
s overskride
yay -S overskride
overskride
overskride -h
overskride --help-gapplication
cd wofi
cp style.css ..
ls .cache/wal/
bat colors.css
cat colors.css
nvim colors.css
cp colors.css ~/.config/wofi
nvim style.css config.jsonc
s pavucontrol
yay -S pavucontrol
waybart
fc-list
fc-list | grep Jetbrains
fc-list | grep JetBrains
nvim .cache/wal/colors-waybar.css
s nm-connection-editor
yay -S nm-connection-editor
network-manager
nm --help
cd .cache
ls wal
cat colors-kitty.conf
cat colors-tty.sh
cat colors-konsole.colorscheme
flatpak run google-chrome
flatpak run chrome
z styles.css
swww kill
swww
swww-daemon
flatpak --user override --filesystem=/home/$USER/.icons/:ro
flatpak --user override --filesystem=/usr/share/icons/:ro
nm-connection-editor
reloadwaybar
z kit
lsc
nvim kitty.conf
yay -S atlauncher
nautilus -h
gtk-settings
s gtk-settings
s webcord
yay -S webcord
yay -S waypaper
waypaper
cd Pictures
lea
rclear
z Wallpapers
z wallpapers
z ~/Downloads
mv wallhave-* ~/Pictures/Wallpapers
mv wallhaven-* ~/Pictures/Wallpapers
rm .
cd ..
rm -rf Downloads
mkdir Downloads
neofetch
s pywal
yay -S pywal-16-colors
clew
z .config/wal
cd templates
ls .cache/wal
nvim .cache/wal/colors-hyprland.conf
z .cache/wal
nvim colors-hyprland.conf
z ohmypsh
echo whoami
z theme
nvim tokyonight.omp.json
rm colors.css
rm -rf wofi
pw
nvim colors-waybar.css
cllear
git
s pipewire
s wireplumber
pacman -Q | grep xdg-desktop-portal-
sudo pacman -S grim slurp
echo $XDG_CURRENT_DESKTOP
z ypr
s obs
yay -S obs-studio
xbindkeys
xev
nvim .config/hypr/hyprland.conf
nvm
z grim
s wl-clipboard
yay -s wl-clipboard
sudo pacman -s wl-clipboard
sudo pacman -S wl-clipboard
ls ~/Pictures/Screenshots
z ~/Pictures/Screenshots
z picture
cd screenshots
z Screenshots
s wl-copy
wl-copy
z Pic
gnome-screenshot
z Picutres
z pic
rm *_grim.png
grim screenshot.png
slurp | grim -g - screenshot1.png
yay -R slurp
yay -S slurp-git
slurp | grim -g - screenshot2.png
gim
grim
wlogout
yay -Qi blender
yay -R blender
s blender
z hupr
s slurp
s swappy
yay -S swappy
swappy
s watershot
yay -S watershot
yay -Qi watershot
cleart
s flameshot
yay -S flameshot
flameshot
yay -R flameshot
chrome
google-chrome
flatpak -h
ls /var/lib/flatpak
nivm 
snap install blender --classic
snap --help
sudo snap install blender --channel=4.0/stable --classic
sudo snap install blender --channel=3.6/stable --classic
sudo snap install blender --channel=3.6lts/stable --classic
Hyprland -V
hyptctl version
yay -H
yay -h
yay -S hyprland
s hyprland
pacman -Ss hyprland
sudo pacman -S hyprland
echo $XDG_SESSION_DESKTOP
picom
clewra
firefox
cat /var/log/messages | grep MIT-MAGIC-COOKIE-1
ls /var/log
cat /etc/X11/xinit/xinitrc.d
ls /etc/X11/xinit/xinitrc.d
cat /etc/X11/xinit/xinitrc.d/50-systemd-user.sh
nvim .xinitrc
exiot
xit
sudo reboot
journalctl -r | grep gnome
journalctl -r | grep gnome error
journalctl -r | grep gnomeerror
journalctl -h
journalctl -n 100 -r | grep gnome
journalctl -n 1000 -r | grep error
pacman -Syu
sudo pacman -Syu
hyprctl version
clwear
timeshift
timeshift --check
sudo timeshift --check
s xhost
yay -S xorg-xhost
ls /usr/share/applications
cp /usr/share/applications/timeshift-gtk.desktop ~/.local/share/applications
ls ~/.local/share/applications
z ~/.local/share/applications
nvim timeshift-gtk.desktop
timeshift-launcher
rm timeshift-gtk.desktop
pkexec timeshift-launcher
sudo -E timeshift-launcher
journalctl -n 1000 -r | grep gnome
nvim .gitconfig
tree
tree -h
tree --help
tree -d
flatpak run com.google.Chrome
journalctl -n 2000 -r | grep gnome
journalctl -n 2000 -r
snap remove blender
sudo snap install blender
sudo snap install blender --classic
s acpi_call
yay -S acpi_call-lts
modprobe acpi_call
z ohmyposh
sclear
nvim negligible.omp.json
z config
z backups
mv style.css style1.css
nvim style.cs
mkdir backups
cp style.css backups
ls backups
nvim style.cs\ 
la
z way
fasfetch
z pictures
fastfetcj
clear && fastfetch
mvim somthing.md
exi
webcord
inxi
sudo pacman -S inxi
inxi -h
inxi -Dxx
journalctl
s sddm
sudo pacman -S sddm
ls /usr/share/wayland-sessions
sddm --version
sudo systemctl disable ly.service
sudo systemctl enable sddm.service
ls /usr/share/xsessions
z xsessions
rm hyprland.desktop
sudo rm hyprland.desktop
z ../wayland-sessions
vim hyprland.desktop
ls /usr/lib/sddm/sddm.conf.d/default.conf
ls usr/lib/sddm/sddm.conf.d/
mkdir /etc/sddm.conf.d/
sudo mkdir /etc/sddm.conf.d/
sudo cp /usr/lib/sddm/sddm.conf.d/default.conf /etc/sddm.conf.d
ls /usr/lib/sddm/sddm.conf.d/
z /etc/sddm.conf.d
nvim default.conf
sudo vim default.conf
sudo mkdir sugar-candy
ls /usr/share/sddm
z /usr/share/sddm/themes
ls maldives
z Downloads
s sddm-sugar
yay -S sddm-sugar-candy-git
mv sugar-candy
mv --help
z sugar-candy
sudo mv * /usr/share/sddm/themes/sugar-candy
z piper
exti
neovim
celar
which discord
which webcord
discord -h
lear
flatpak --installations
webcord --help
webcord --add-css-theme 
nvim pywal-discord
webcord --add-css-theme pywal-discord-default.css
mkdir .scripts
vim generate-themes.sh
mv generate-themes.sh ~/.scripts
z .scripts
chmod --help
chmod +x generate-themes.sh
./generate-themes.sh
rm -rf Pywal generate-themes.sh
s pywal-discord
yay -S pywal-discord
ls /usr/share/pywal-discord/
clearl
mkdir pywal-discord
z pywal-discord
cp /usr/share/pywal-discord/pywal-discord-default.css .
nvim pywal-discord-default.css
pywal-discord -t default
pywal-discord -p
fastfetch
z icons
z .local/share/icons
z Bibata-Modern-Classic
nvim cursor.theme
nvim index.theme
z cursors
$ npm install -g google-font-installer
npm install -g google-font-installer
gfi --help
gfi search dm
ls /usr/share/fonts
ls .local/share/fonts
gfi download DM Serif Display -d .local/share/fonts
z .local/share/fonts
mkdir DmSerifDisplay
z FiraCode
mv DmSerifDisplay-italic.ttf DmSerifDisplay-regular.ttf DmSerifDisplay/
ls DmSerifDisplay
nmtui
ext
z ACm
sc
mkdir Cooking
git clone https://github.com/ACM-VIT/ExamCooker-2024.git
sudo dmesg | grep xhci_pci
pacman -Qi oh-my-posh
yay -Syu
s kuro
yay -S kuro
mount -l
cat /proc/mounts
mount
s nwg-look-bin
yay -S nwg-look-bin
yay -S arc-solid-gtk-theme
yay -S materia-gtk-theme
yay -S graphite-gtk-theme
yay -Qi gtk-engine-murrine
s gtk-engine-murrine
yay -S gtk-engine-murrine
yay -Q sassc
yay -Qi xdg-desktop-portal-wlr
yay -Qi xdg-desktop-portal
dunst
ps aux | grep dunst
claeer
ls /usr/share/icons
ls .local/share/icons
mkdir .icons
rm .icons
nvim .icons
cp ~/.local/share/icons/Bibata-Modern-Classic ~/.icons
cp -r ~/.local/share/icons/Bibata-Modern-Classic ~/.icons
ls .icons
ls /usr/share/themes
mkdir .themes/
l | grep .themes
l | grep .icons
cp -r /usr/share/themes ~/.themes
ls .themes
ls themes
z .themes
z themes
mv * ..
rm -d themes
flatpak override --filesystem=~/.themes:ro --filesystem=~/.icons:ro --user
z hyupr
nviom
nvim init.lua
nvim colors/lushwal.vim
nvim .gitignore
git reset --hard HEAD~1\

mvim
nvim nvim
echo $TERM
waybar
nvi
nvim ExamCooker-2024
git branch
nvim/
nvim /
z nivm
hyprpm update
hyprpm --help
cpio
s cpio
yay -S cpio
make all
yay -S hyprpicker-git
hyprpicker
git checkout dev
git checkout main
nvim README.md
rm -rf ExamCooker-2024
cmake
make
yay -Si polkit-*
yay -Si polkit
yay -Qi polkit
yay -Qi polkit-gnome
yay -Qi cpio
hyprpm update -v
yay -Qi cmake
yay -S cmake
yay -Qi hyprwayland-scanner
yay -Ssi hyprwayland-scanner
yay -
yay -S hyprwayland-scanner
hyprpm update --verbose
hyprpm add https://github.com/outfoxxed/hy3
hyprpm enable
hyprpm enable hy3
z Cooking
rm -d Cooking
rm -rf ExamCooker
mkdir ExamCooker
z ExamCooker
git clone https://github.com/Alan-J-Bibins/ExamCooker-2024.git
ls /var/lib/flatpak/app
z ExamCooker-2024
cl
what is thissss
mkdir -p ~/.config/wlogout
cat /etc/wlogout/layout
cp /etc/wlogout/layout ~/.config/wlogout
z ~/.config/wlogout
z AJB
nvim Pappa.txt
mv Pappa.txt Pappa.md
nvim Pappa.md
live-server
s vtop
yay -s vtop nvtop
yay -S vtop
top
yay -S nvtop
ps aux
ps
nivm layout
cp /etc/wlogout/style.css .
z wal
fd wlogout
clkear
z 2024
s hyprshot
yay -S hyprshot
hyprshot -h
hyprshot -m region
z Picutrs
z Pictures
yay -R hyprshot
xkill
lsblk
curl --create-dirs -o $HOME/.postgresql/root.crt 'https://cockroachlabs.cloud/clusters/d72acc82-cf04-4a37-9748-58e43494b23e/cert'
cat .postgresql/root.crt
rm wallhaven-*
z testing
mkdir learningJS
z nvim
lg
s dell
s awcc
yay -R dell-g15-controller
ls /etc/udev/rules.d
nvim 00-aw-elc.rules
cat 70-snap.figma-linux.rules
sudo nvim 00-aw-elc.rules
ls 70-snap.snapd.rules
cat 70-snap.snapd.rules
sudo modprobe acpi_call
s dell-g15
fd main.py
yay -Qi dell-g15-controller
cd /etc/udev/rules.d
rm 00-aw-elc.rules
sudo rm 00-aw-elc.rules
yay -S dell-g15-controller
dell-g15-controller
fd dell-g15
fd controller
fd dell
rg dell
s docker
yay -S docker
systemctl enable docker.socket
sudo systemctl enable docker.socket
sudo systemctl enable docker.socket --now
docker info
sudo docker info
s distrobox
yay -S distrobox
distrobox --version
distrobox list
sudo distrobox list
s boxbuddy
yay -S boxbuddy
dnf
dnf repoquery --userinstalled
cat ~/Downloads/distrobox-nvidia.ini
distrobox assemble --file $HOME/Downloads/distrobox-nvidia.ini
sudo distrobox assemble create --file $HOME/Downloads/distrobox-nvidia.ini
nvim Downloads/distrobox-nvidia.ini
distrobox assemble create --file $HOME/Downloads/distrobox-nvidia.ini
password
passwd
resolve
echo $PATH
echo $PATH | grep opt
whoami
ls /opt/containerd
sudo /opt/containerd
sudo ls /opt/containerd/
sudo /opt/containerd/bin/
sudo ls /opt/containerd/bin
ls /opt/
mkdir DAresolve
sudo cp -r /opt/resolve DAresolve
cd DAresolve
cd resolve
ls DAresolve
Davinci
dnf --help
sudo dnf install ocl-icd
/opt/resolve/bin/resolve %u
distrobox enter --root rocky
distrobox --help
distrobox ls
distrobox stop
distrobox rm
distrobox rm -a
distrobox ls --root
distrobox stop rocky --root
distrobox rm rocky --root
sudo usermod -a -G render alan
groups
id alan
sudo dnf install alsa-plugins-pulseaudio libxcrypt-compat xcb-util-renderutil xcb-util-wm pulseaudio-libs xcb-util xcb-util-image xcb-util-keysyms libxkbcommon-x11 libXrandr libXtst mesa-libGLU mtdev libSM libXcursor libXi libXinerama libxkbcommon libglvnd-egl libglvnd-glx libglvnd-opengl libICE librsvg2 libSM libX11 libXcursor libXext libXfixes libXi libXinerama libxkbcommon libxkbcommon-x11 libXrandr libXrender libXtst libXxf86vm mesa-libGLU mtdev pulseaudio-libs xcb-util alsa-lib apr apr-util fontconfig freetype libglvnd fuse-libs
lspci -k | grep -A 2 -E "(VGA|3D)"
sudo dnf install \\
  https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
sudo dnf install \\
  https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
sudo dnf install akmod-nvidia  xorg-x11-drv-nvidia-cuda
sudo dnf install fuse
sudo dnf install linuxfb
distrobox-create --name Resolve-Fedora --image fedora:37
distrobox-create --name Resolve-Fedora --image fedora:37 --root
sudo whoami
pkexec whoami
cd Downloads
cd DaVinci_Resolve_18.6.6_Linux
./DaVinci_Resolve_18.6.6_Linux.run
sudo ./DaVinci_Resolve_18.6.6_Linux.run
distrobox-export -a resolve
sudo dnf install libxcrypt-compat
/opt/resolve/bin/resolve
distrobox-export -d resolve
distrobox-export --help
distrobox-export -d resolve 
distrobox-export -d resolve --root
distrobox enter --root Resolve-Fedora
distrobox stop Resolve-Fedora --root
distrobox rm Resolve-Fedora --root
distrobox-list --root
nvidia-smi
q
grim -h
z screenshots
nautilus .
pwd
nautilus pwd
q libxcrypt
date
tsl
q pulseaudi
q pulseaudio
q pulseaudio-alsa
z /opt/resolve/
q lib32-alsa-plugins
s davinci-resolve
yay -S davinci-resolve 18.6.6-3
yay -S davinci-resolve
yay -S davinci-resolve-studio
q nwg-shell
yay -S satty-bin
satty
nvim hyr
cleaf
q mako
s mako
q dunst
s dunst
yay -S mako
mako
clera
man 5 mako
systemctl --user status mako
dbus-send --session --print-reply --dest=org.freedesktop.DBus / org.freedesktop.DBus.GetConnectionUnixProcessID string:org.freedesktop.Notifications
ps -ef | grep 101415
z .config
mkdir mako
kitty +list-fonts
cler
nvim ocnfig
notify-send -u critical \\
  "This is a critical message\!" \\
  "OK, that was just a demo ;)"
fc-list | grep SF
fc-list 
fc-list | grep sans
fc-list | grep Sans
chmod +x update-theme.sh
s eza
yay -S eza
exa
eza
eza --help
eza --total-size
eza --git
eza -l;
eza -l
touch something.sh
rm something.sh
z 
eza -la
esxit
nvim meet.txt
rm meet.txt
rm -rf DAresolve
sudo rm -rf DAresolve
nvim something.mds
nvim something.md
./update-theme.sh
sh ~/.config/mako/update-theme.sh
zwofi
z wofi
notify-send "hello"
z wayppaer
z Projects
mako -h
swww -h
z waypaper
nvim config.ini
z learningJS
z leanring
,s
z learningJs
dls
npm install react@latest react-dom@latest next@latest
nvim package
nvim index.html
mv index.html index.jsx
mkdir app
mv index.jsx app
nvim app
cleawr
reboot
exut
eixt
notify-send "hello this ia very huge paragraph with a lot of thext i hope that the thingy works properly the way i hope it does"
update-theme.sh
sh update-theme.sh
z
nvim .zshrc
z learnign
nvim ./
nivm
makoctl --help
makoctl menu -n 12345 wofi -d -p 'Choose Action: '
makoctl list
makoctl history
makoctl mode
q upower
q tlp
s tlp
s power-profiles-daemon
pacman -S tlp tlp-rdw
sudo pacman -S tlp tlp-rdw
sudo systemctl enable tlp.service
sudo systemctl enable NetworkManager-dispatcher.service
systemctl mask systemd-rfkill.service systemd-rfkill.socket
tlp-stat -b
sudo vim /etc/tlp.conf
z wlogout
nvim layout
sudo tlp-stat -b
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors 
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo powersave | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
echo "\_SB.AMWW.WMAX 0 0x15 {1, 0xab, 0x00, 0x00}" > /proc/acpi/call
nvim update-theme.sh
z -
nvim gmodeON.sh
nvim gmodeOFF.sh
chmod +x gmodeOFF.sh
l
exa -l
chmod +x gmodeON.sh
sudo sh gmodeON.sh
nvtop
sh gmodeOFF.sh
sudo sh gmodeOFF.sh
watch -n.1 "grep '^[c]pu MHz' /proc/cpuinfo"
sensors-detect
sudo sensors-detect
sudo vim /etc/sensors.d/fan-speed-control.conf
sudo rm /etc/sensors.d/fan-speed-control.conf
sensors -s
sensors
pwmconfig
sudo pwmconfig
clar
xwininfo
s xeyes
hyprctl clients
cear
clewar
nvim
is
z hyr
sudo pacman -S base-devel fftw alsa-lib iniparser pulseaudio autoconf-archive pkgconf
sudo pacaur -S cava
yay -S cava
z mako
nvim config
makoctl reload
notify-send "Hello there, says Obi-Wan"
cava
nvim hyprland.conf
z waybar
nvim style.css
nvim config.jsonc
z hypr
nvim 
sudo pacman -S lutris
s steam
yay -S steam
steam --version
steam --reset
steam -h
wzir
z leranign
claer
systemctl --user enable opentabletdriver.service --now
ff
sl
z ..
mv testing/ learning/
z learning
npm create vite@latest
z tictactoe
s
npm i
ls
nvimf
npm run dev
vtop
pacman -Qi meson systemd git dbus libinih
sudo pacman -S gamemode lib32-gamemode
yay -S gamemode lib32-gamemode
nvim ideas.txt
journalctl -r
clear
exit
z tic
claer
z nivm
z nvim
nvimf
clewar
lg
cler
ls
clear
z -
nvim
